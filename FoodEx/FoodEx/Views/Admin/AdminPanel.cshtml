@using FoodEx.Data.Entity
@using FoodEx.Data
@using FoodEx.Entity
@model List<(ApplicationUser User, string Role)>

@{
    ViewData["Title"] = "Admin Panel";
}

<div class="container my-5">
    <div class="card shadow-lg p-4 rounded-4">
        <h2 class="text-center mb-5">@ViewData["Title"]</h2>

        <!-- Users Management -->
        <section class="mb-5">
            <h4 class="mb-4">Users Overview</h4>
            <div class="table-responsive">
                <table class="table table-striped table-hover align-middle">
                    <thead class="table-light">
                        <tr>
                            <th>User</th>
                            <th>Email</th>
                            <th>Role</th>
                            <th>Verified</th>
                            <th>Toggle Verification</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var (user, role) in Model)
                        {
                            <tr>
                                <td>@user.UserName</td>
                                <td>@user.Email</td>
                                <td>@role</td>
                                <td>
                                    <span class="badge @(user.LockoutEnabled ? "bg-danger" : "bg-success")">
                                        @(user.LockoutEnabled ? "No" : "Yes")
                                    </span>
                                </td>
                                <td>
                                    <form asp-action="ToggleVerification" method="post" class="d-inline">
                                        <input type="hidden" name="userId" value="@user.Id" />
                                        <button type="submit" class="btn btn-warning btn-sm">Toggle</button>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </section>

        <hr class="my-5" />

        <!-- Orders Management -->
        <section class="mb-5">
            <h4 class="mb-4">Manage Orders</h4>
            @{
                var orders = ViewBag.Orders as List<FoodEx.Data.Entity.Order>;
            }

            @if (orders != null && orders.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover align-middle">
                        <thead class="table-light">
                            <tr>
                                <th>Order ID</th>
                                <th>User</th>
                                <th>Status</th>
                                <th>Update Status</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in orders)
                            {
                                <tr>
                                    <td>@order.OrderId</td>
                                    <td>@order.User?.UserName</td>
                                    <td>@order.Status</td>
                                    <td>
                                        <form asp-action="UpdateOrderStatus" method="post" class="d-flex align-items-center gap-2">
                                            <input type="hidden" name="orderId" value="@order.OrderId" />
                                            <select name="newStatus" class="form-select form-select-sm w-auto">
                                                @foreach (OrderStatus status in Enum.GetValues(typeof(OrderStatus)))
                                                {
                                                    <option value="@status" selected="@(order.Status == status)">
                                                        @status
                                                    </option>
                                                }
                                            </select>
                                            <button type="submit" class="btn btn-primary btn-sm">Update</button>
                                        </form>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <p class="text-muted">No orders available at the moment.</p>
            }
        </section>

        <hr class="my-5" />

        <!-- Ratings Management -->
        <section class="mb-5">
            <h4 class="mb-4">Manage Ratings & Comments</h4>
            @{
                var ratings = ViewBag.Ratings as List<FoodEx.Data.Entity.Rating>;
            }

            @if (ratings != null && ratings.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover align-middle">
                        <thead class="table-light">
                            <tr>
                                <th>Rating ID</th>
                                <th>User</th>
                                <th>Food</th>
                                <th>Comment</th>
                                <th>Delete</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var rating in ratings)
                            {
                                <tr>
                                    <td>@rating.RatingId</td>
                                    <td>@rating.User?.UserName</td>
                                    <td>@rating.Food?.Name</td>
                                    <td>@rating.Comment</td>
                                    <td>
                                        <form asp-action="DeleteRating" method="post" class="d-inline">
                                            <input type="hidden" name="ratingId" value="@rating.RatingId" />
                                            <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                                        </form>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <p class="text-muted">No ratings/comments available yet.</p>
            }
        </section>

        <hr class="my-5" />

        <div class="mb-5">
            <h4 class="mb-3">Delivered Orders</h4>

            @{
                var deliveredOrders = ViewBag.DeliveredOrders as List<FoodEx.Data.Entity.Order>;
            }

            @if (deliveredOrders != null && deliveredOrders.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover align-middle">
                        <thead class="table-light">
                            <tr>
                                <th>Order ID</th>
                                <th>User</th>
                                <th>Delivery Guy</th>
                                <th>Delivery Address</th>
                                <th>Total Price</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in deliveredOrders)
                            {
                                <tr>
                                    <td>@order.OrderId</td>
                                    <td>@order.User?.UserName</td>
                                    <td>
                                        @if (order.DeliveryGuyId != null)
                                        {
                                            @order.DeliveryGuy.Email
                                        }
                                        else
                                        {
                                            <span class="text-muted">Not Assigned</span>
                                        }
                                    </td>
                                    <td>@order.DeliveryAddress?.Street</td>
                                    <td>@order.TotalPrice лв</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <p class="text-muted">No delivered orders found yet.</p>
            }
        </div>

        <div class="mb-5">
            <div style="max-width: 200px; margin: 0 auto;">
                <canvas id="deliveryPieChart" width="200" height="200"></canvas>
            </div>
        </div>

        <hr class="my-5" />

        
        <section class="mb-5">
            <h4 class="mb-4">Add New Category</h4>
            <a asp-action="AddCategory" class="btn btn-outline-success">Add Category</a>
        </section>

    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const rawData = @Html.Raw(Json.Serialize(ViewBag.DeliveredOrdersGrouped ?? new List<object>()));

            if (!Array.isArray(rawData) || rawData.length === 0) {
                console.warn("No delivery data available for the chart.");
                return;
            }

            const labels = rawData.map(item => item.deliveryGuyName ?? "Unknown");
            const data = rawData.map(item => item.count ?? 0);

            const ctx = document.getElementById('deliveryPieChart').getContext('2d');

            new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: labels,
                    datasets: [{
                        data: data,
                        backgroundColor: [
                            '#007bff', '#28a745', '#ffc107', '#dc3545', '#6610f2', '#6f42c1', '#20c997', '#fd7e14'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'bottom',
                        },
                        tooltip: {
                            callbacks: {
                                label: function (context) {
                                    const label = context.label || '';
                                    const value = context.parsed || 0;
                                    return `${label}: ${value} orders`;
                                }
                            }
                        },
                        title: {
                            display: true,
                            text: 'Delivered Orders by Delivery Guy'
                        }
                    }
                }
            });
        });
    </script>
}

